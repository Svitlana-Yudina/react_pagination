{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageAmount","useMemo","Math","ceil","className","classNames","disabled","href","onClick","map","numberOfPage","active","length","App","useState","setCurrentPage","setPerPage","start","end","min","visibleItems","hendleChange","useCallback","event","Number","target","value","id","onChange","htmlFor","page","prevPage","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,mBAAQ,WAGzB,OAAOZ,EAAW,EAFAa,KAAKC,KAAKP,EAAQC,MAGnC,CAACD,EAAOC,IAEX,OACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBR,IAHd,SAOE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACHV,EAAc,GAChBC,EAAa,SAPnB,oBAcDC,EAAWS,KAAI,SAAAC,GAAY,OAC1B,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAAiBZ,IAL/B,SASE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAdEA,MAkBT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUR,IAAgBE,EAAWY,SAHzC,SAOE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAAWY,OAC1CJ,QAAS,WACHV,EAAcE,EAAWY,QAC3Bb,EAAa,SAPnB,wBCrEKc,EAAgB,WAC3B,IACA,EAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KAEMC,EAAQpB,EAAUC,EAAcD,EAAU,EAC1CqB,EAAMhB,KAAKiB,IAAKF,EAAQpB,EAAU,EAL1B,IAMRuB,EAAenB,mBAAQ,WAC3B,OAAOZ,EAAW4B,EAAOC,GAAKT,KAAI,SAAAhB,GAAC,qBAAYA,QAC9C,CAACwB,EAAOC,IAkBLG,EAAeC,uBACnB,SAACC,GACCP,EAAWQ,OAAOD,EAAME,OAAOC,QAC/BX,EAAe,KACd,IAGL,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCmB,EADjC,cAC4CC,EAD5C,eArCU,GAqCV,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVsB,MAAO7B,EACP+B,SAAUP,EALZ,UAOE,wBAAQK,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOG,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACER,MA9DQ,GA+DRC,QAASA,EACTC,YAAaA,EACbC,aAvDe,SACnB+B,GAEoB,kBAATA,GACTf,EAAee,GAGJ,SAATA,GACFf,GAAe,SAACgB,GAAD,OAAcA,EAAW,KAG7B,SAATD,GACFf,GAAe,SAACgB,GAAD,OAAcA,EAAW,QA6CxC,6BACGX,EAAaX,KAAI,SAAAuB,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCzEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c65d92e3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number | string) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageAmount = useMemo(() => {\n    const pageCount = Math.ceil(total / perPage);\n\n    return getNumbers(1, pageCount);\n  }, [total, perPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage === 1,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage > 1) {\n              onPageChange('prev');\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pageAmount.map(numberOfPage => (\n        <li\n          key={numberOfPage}\n          className={classNames(\n            'page-item',\n            {\n              active: numberOfPage === currentPage,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${numberOfPage}`}\n            onClick={() => onPageChange(numberOfPage)}\n          >\n            {numberOfPage}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage === pageAmount.length,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageAmount.length}\n          onClick={() => {\n            if (currentPage < pageAmount.length) {\n              onPageChange('next');\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const start = perPage * currentPage - perPage + 1;\n  const end = Math.min((start + perPage - 1), total);\n  const visibleItems = useMemo(() => {\n    return getNumbers(start, end).map(n => `Item ${n}`);\n  }, [start, end]);\n\n  const onPageChange = (\n    page: number | string,\n  ) => {\n    if (typeof page === 'number') {\n      setCurrentPage(page);\n    }\n\n    if (page === 'next') {\n      setCurrentPage((prevPage) => prevPage + 1);\n    }\n\n    if (page === 'prev') {\n      setCurrentPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const hendleChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setPerPage(Number(event.target.value));\n      setCurrentPage(1);\n    }, [],\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start} - ${end} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={hendleChange}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}